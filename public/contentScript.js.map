{"version":3,"file":"contentScript.js","mappings":"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","sources":["webpack://create/./src/contentScript.js"],"sourcesContent":["'use strict';\n\nlet isVideoRemovalActive = false;\nlet isCustomFilterActive = false;\nlet isAdFilterActive = false;\nlet observer = null;\nlet videoFilteredPosts = 0;\nlet customFilteredPosts = 0;\nlet adFilteredPosts = 0;\nlet processedPosts = new Set(); // Track processed post IDs\nlet processingInProgress = false; // Flag to prevent concurrent processing\nlet customFilterPrompt = \"Analyze if the following content is political in nature.\"; // Default prompt\n\nasync function analyzeCustomContent(text, imageUrls = []) {\n  try {\n    const apiKey = await new Promise((resolve) => {\n      chrome.storage.local.get(['openaiKey'], function(result) {\n        resolve(result.openaiKey);\n      });\n    });\n\n    if (!apiKey) {\n      console.log('[X Filter] No API key found');\n      return false;\n    }\n\n    // Get the custom filter prompt\n    const savedPrompt = await new Promise((resolve) => {\n      chrome.storage.local.get(['customFilterPrompt'], function(result) {\n        resolve(result.customFilterPrompt || customFilterPrompt);\n      });\n    });\n    \n    // Create a prompt that includes both text and image descriptions\n    let prompt = `${savedPrompt} Respond with only \"true\" or \"false\":\\n`;\n    \n    // Add the text content\n    prompt += `Post text: \"${text}\"\\n`;\n    \n    // Add image descriptions if available\n    if (imageUrls.length > 0) {\n      prompt += `The post contains ${imageUrls.length} image(s). Please consider the images in your analysis.`;\n    }\n\n    // Prepare messages array with text content\n    const messages = [{\n      role: \"user\",\n      content: prompt\n    }];\n\n    // Add image content if available\n    if (imageUrls.length > 0) {\n      // For GPT-4o, we can include image URLs directly in the content array\n      const contentArray = [\n        {\n          type: \"text\",\n          text: prompt\n        }\n      ];\n      \n      // Add each image to the content array\n      for (const imageUrl of imageUrls.slice(0, 2)) { // Limit to 2 images to avoid token limits\n        contentArray.push({\n          type: \"image_url\",\n          image_url: {\n            url: imageUrl\n          }\n        });\n      }\n      \n      // Replace the simple text message with the content array\n      messages[0].content = contentArray;\n    }\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"gpt-4o-mini\",\n        messages: messages,\n        temperature: 0.7\n      })\n    });\n\n    const data = await response.json();\n    \n    if (data.error) {\n      console.error('[X Filter] API Error:', data.error);\n      return false;\n    }\n    \n    const result = data.choices[0].message.content.toLowerCase().trim();\n    return result === 'true';\n  } catch (error) {\n    console.error('[X Filter] Error analyzing content:', error);\n    return false;\n  }\n}\n\n/**\n * Extract image URLs from a post element\n */\nfunction extractImageUrls(postElement) {\n  const imageUrls = [];\n  \n  // Find all images in the post\n  const images = postElement.querySelectorAll('img');\n  \n  images.forEach(img => {\n    // Skip tiny images, profile pictures, and icons\n    if (img.width < 100 || img.height < 100) return;\n    \n    // Skip images with certain class names that indicate they're not content\n    const className = img.className || '';\n    if (className.includes('profile') || className.includes('avatar') || className.includes('icon')) return;\n    \n    // Get the image URL\n    const src = img.src;\n    if (src && !src.includes('data:image')) { // Skip data URLs\n      imageUrls.push(src);\n    }\n  });\n  \n  return imageUrls;\n}\n\n/**\n * Searches for video elements within the page.\n * When found inside a post container, the post is hidden.\n */\nfunction hideVideoPosts() {\n  // Look for video elements\n  const videoElements = document.querySelectorAll('video');\n\n  videoElements.forEach(videoElement => {\n    // Assume that the post is housed in an <article> element\n    const postContainer = videoElement.closest('article');\n    if (postContainer) {\n      // Get a unique identifier for the post\n      const postId = getPostId(postContainer);\n      \n      // Skip if already processed\n      if (processedPosts.has(postId)) return;\n      \n      // Mark as processed\n      processedPosts.add(postId);\n      \n      // Hide the post\n      postContainer.style.display = 'none';\n      videoFilteredPosts++;\n      console.log('[X Filter] Hiding post with video');\n    }\n  });\n}\n\n/**\n * Searches for advertisements on the page and hides them.\n */\nfunction hideAds() {\n  // Look for promoted posts (ads)\n  // X/Twitter marks ads with specific text or attributes\n  \n  // Method 1: Look for \"Promoted\" text in spans\n  const promotedTexts = Array.from(document.querySelectorAll('span')).filter(span => \n    span.textContent.includes('Promoted') || \n    span.textContent.includes('Ad')\n  );\n  \n  promotedTexts.forEach(promotedSpan => {\n    // Find the containing article\n    const postContainer = promotedSpan.closest('article');\n    if (postContainer) {\n      // Get a unique identifier for the post\n      const postId = getPostId(postContainer);\n      \n      // Skip if already processed\n      if (processedPosts.has(postId)) return;\n      \n      // Mark as processed\n      processedPosts.add(postId);\n      \n      // Hide the post\n      postContainer.style.display = 'none';\n      adFilteredPosts++;\n      console.log('[X Filter] Hiding advertisement');\n    }\n  });\n  \n  // Method 2: Look for data attributes that might indicate ads\n  const possibleAdElements = document.querySelectorAll('[data-testid=\"promotedIndicator\"]');\n  possibleAdElements.forEach(adElement => {\n    const postContainer = adElement.closest('article');\n    if (postContainer) {\n      // Get a unique identifier for the post\n      const postId = getPostId(postContainer);\n      \n      // Skip if already processed\n      if (processedPosts.has(postId)) return;\n      \n      // Mark as processed\n      processedPosts.add(postId);\n      \n      // Hide the post\n      postContainer.style.display = 'none';\n      adFilteredPosts++;\n      console.log('[X Filter] Hiding advertisement (data attribute)');\n    }\n  });\n}\n\n// Get a unique identifier for a post\nfunction getPostId(postElement) {\n  // Try to get the post ID from data attributes\n  const idAttribute = postElement.getAttribute('data-testid') || '';\n  const articleId = postElement.getAttribute('aria-labelledby') || '';\n  \n  // If we have an ID attribute, use it\n  if (idAttribute || articleId) {\n    return `${idAttribute}-${articleId}`;\n  }\n  \n  // Fallback to using the post's content as an ID\n  const textContent = postElement.textContent.substring(0, 100);\n  return textContent.replace(/\\s+/g, '');\n}\n\nasync function processCustomPosts() {\n  // Find all posts (articles) on the page\n  const posts = document.querySelectorAll('article');\n  \n  // Process each post for custom content\n  for (const post of posts) {\n    // Get a unique identifier for the post\n    const postId = getPostId(post);\n    \n    // Skip posts we've already processed\n    if (processedPosts.has(postId)) {\n      continue;\n    }\n    \n    // Get the text content of the post\n    const textContent = post.textContent;\n    \n    // Skip very short posts\n    if (textContent.length < 10) {\n      continue;\n    }\n    \n    // Extract image URLs from the post\n    const imageUrls = extractImageUrls(post);\n    \n    // Mark as processed before analysis to prevent duplicate processing\n    processedPosts.add(postId);\n    \n    // Analyze the post content including any images\n    const shouldFilter = await analyzeCustomContent(textContent, imageUrls);\n    \n    if (shouldFilter) {\n      customFilteredPosts++;\n      // Hide the post\n      post.style.display = 'none';\n      console.log('[X Filter] Hiding custom filtered post', imageUrls.length > 0 ? '(with images)' : '');\n    }\n  }\n}\n\n// Process all posts (video, custom, and ads)\nasync function processAllPosts() {\n  if (processingInProgress) return;\n  processingInProgress = true;\n  \n  try {\n    // Process video posts if that filter is active\n    if (isVideoRemovalActive) {\n      hideVideoPosts();\n    }\n    \n    // Process ads if that filter is active\n    if (isAdFilterActive) {\n      hideAds();\n    }\n    \n    // Process custom posts if that filter is active\n    if (isCustomFilterActive) {\n      await processCustomPosts();\n    }\n  } catch (error) {\n    console.error('[X Filter] Error processing posts:', error);\n  } finally {\n    processingInProgress = false;\n  }\n}\n\n// Start observing the DOM for changes\nfunction startObserver() {\n  if (observer) return; // Observer already running\n  \n  console.log('[X Filter] Starting observer');\n  \n  observer = new MutationObserver((mutations) => {\n    // Use a small delay to allow the DOM to settle\n    clearTimeout(window.processingTimeout);\n    window.processingTimeout = setTimeout(() => {\n      processAllPosts();\n    }, 500);\n  });\n  \n  observer.observe(document.body, { \n    childList: true, \n    subtree: true \n  });\n  \n  // Initial processing\n  processAllPosts();\n}\n\n// Stop the observer\nfunction stopObserver() {\n  // Stop the MutationObserver if active\n  if (observer) {\n    observer.disconnect();\n    observer = null;\n    console.log('[X Filter] Observer stopped');\n  }\n}\n\n// Toggle video filter\nfunction toggleVideoFilter() {\n  isVideoRemovalActive = !isVideoRemovalActive;\n  console.log(`[X Filter] Video removal ${isVideoRemovalActive ? 'enabled' : 'disabled'}`);\n  \n  // Start or stop the observer based on whether any filter is active\n  if (isVideoRemovalActive || isCustomFilterActive || isAdFilterActive) {\n    startObserver();\n  } else {\n    stopObserver();\n  }\n  \n  // Sync state with extension storage\n  chrome.storage.local.set({ videoFilterActive: isVideoRemovalActive });\n}\n\n// Toggle custom filter\nfunction toggleCustomFilter() {\n  isCustomFilterActive = !isCustomFilterActive;\n  console.log(`[X Filter] Custom filter ${isCustomFilterActive ? 'enabled' : 'disabled'}`);\n  \n  // Start or stop the observer based on whether any filter is active\n  if (isVideoRemovalActive || isCustomFilterActive || isAdFilterActive) {\n    startObserver();\n  } else {\n    stopObserver();\n  }\n  \n  // Sync state with extension storage\n  chrome.storage.local.set({ customFilterActive: isCustomFilterActive });\n}\n\n// Toggle ad filter\nfunction toggleAdFilter() {\n  isAdFilterActive = !isAdFilterActive;\n  console.log(`[X Filter] Ad filter ${isAdFilterActive ? 'enabled' : 'disabled'}`);\n  \n  // Start or stop the observer based on whether any filter is active\n  if (isVideoRemovalActive || isCustomFilterActive || isAdFilterActive) {\n    startObserver();\n  } else {\n    stopObserver();\n  }\n  \n  // Sync state with extension storage\n  chrome.storage.local.set({ adFilterActive: isAdFilterActive });\n}\n\n// Update custom filter prompt\nfunction updateCustomFilterPrompt(newPrompt) {\n  customFilterPrompt = newPrompt;\n  console.log(`[X Filter] Custom filter prompt updated`);\n  \n  // Sync prompt with extension storage\n  chrome.storage.local.set({ customFilterPrompt: newPrompt });\n}\n\n// Listen for messages from the popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.action === 'getState') {\n    sendResponse({ \n      videoActive: isVideoRemovalActive,\n      customActive: isCustomFilterActive,\n      adActive: isAdFilterActive\n    });\n  } else if (request.action === 'toggleVideoRemoval') {\n    toggleVideoFilter();\n    sendResponse({ success: true, active: isVideoRemovalActive });\n  } else if (request.action === 'toggleCustomFilter') {\n    toggleCustomFilter();\n    sendResponse({ success: true, active: isCustomFilterActive });\n  } else if (request.action === 'toggleAdFilter') {\n    toggleAdFilter();\n    sendResponse({ success: true, active: isAdFilterActive });\n  } else if (request.action === 'updateCustomFilterPrompt') {\n    updateCustomFilterPrompt(request.prompt);\n    sendResponse({ success: true });\n  } else if (request.action === 'getCustomFilterPrompt') {\n    sendResponse({ prompt: customFilterPrompt });\n  }\n  \n  return true; // Indicates async response\n});\n\n// Load saved filter states and prompt\nfunction loadSavedFilterStates() {\n  chrome.storage.local.get(['videoFilterActive', 'customFilterActive', 'adFilterActive', 'customFilterPrompt'], function(result) {\n    if (result.videoFilterActive !== undefined) {\n      isVideoRemovalActive = result.videoFilterActive;\n    }\n    \n    if (result.customFilterActive !== undefined) {\n      isCustomFilterActive = result.customFilterActive;\n    }\n    \n    if (result.adFilterActive !== undefined) {\n      isAdFilterActive = result.adFilterActive;\n    }\n    \n    if (result.customFilterPrompt) {\n      customFilterPrompt = result.customFilterPrompt;\n    }\n    \n    // Start observer if any filter is active\n    if (isVideoRemovalActive || isCustomFilterActive || isAdFilterActive) {\n      startObserver();\n    }\n    \n    console.log(`[X Filter] Loaded saved states - Video: ${isVideoRemovalActive}, Custom: ${isCustomFilterActive}, Ads: ${isAdFilterActive}`);\n  });\n}\n\n// Initial setup when the script loads\nconsole.log('[X Content Filter] Content script loaded');\nloadSavedFilterStates();\n\n// Process posts on initial load with a small delay\nsetTimeout(() => {\n  processAllPosts();\n}, 2000); "],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","test","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","isVideoRemovalActive","isCustomFilterActive","isAdFilterActive","observer","videoFilteredPosts","customFilteredPosts","adFilteredPosts","processedPosts","Set","processingInProgress","customFilterPrompt","analyzeCustomContent","_x","_analyzeCustomContent","_callee","text","imageUrls","apiKey","savedPrompt","prompt","messages","contentArray","_iterator","_step","imageUrl","response","data","result","_args","_callee$","_context","undefined","chrome","storage","local","get","openaiKey","console","log","concat","role","content","image_url","url","err","fetch","headers","body","JSON","stringify","model","temperature","json","error","choices","message","toLowerCase","trim","t0","extractImageUrls","postElement","images","querySelectorAll","img","width","height","className","includes","src","hideVideoPosts","videoElements","document","videoElement","postContainer","closest","postId","getPostId","has","add","style","display","hideAds","promotedTexts","filter","span","textContent","promotedSpan","possibleAdElements","adElement","idAttribute","getAttribute","articleId","substring","replace","processCustomPosts","_processCustomPosts","_callee2","posts","_iterator2","_step2","post","shouldFilter","_callee2$","_context2","processAllPosts","_processAllPosts","_callee3","_callee3$","_context3","startObserver","MutationObserver","mutations","clearTimeout","window","processingTimeout","setTimeout","observe","childList","subtree","stopObserver","disconnect","toggleVideoFilter","set","videoFilterActive","toggleCustomFilter","customFilterActive","toggleAdFilter","adFilterActive","updateCustomFilterPrompt","newPrompt","runtime","onMessage","addListener","request","sender","sendResponse","action","videoActive","customActive","adActive","success","active","loadSavedFilterStates"],"sourceRoot":""}