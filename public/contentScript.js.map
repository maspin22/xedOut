{"version":3,"file":"contentScript.js","mappings":"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","sources":["webpack://create/./src/contentScript.js"],"sourcesContent":["'use strict';\n\nlet isVideoRemovalActive = false;\nlet isPoliticalFilterActive = false;\nlet observer = null;\nlet politicalFilteredPosts = 0; // Counter for political filtered posts\nlet videoFilteredPosts = 0; // Counter for video filtered posts\nlet processedPosts = new Set(); // Track processed post IDs\nlet processingInProgress = false; // Flag to prevent concurrent processing\nlet debugPanelVisible = false; // Control debug panel visibility\n\nasync function analyzePoliticalContent(text) {\n  try {\n    const apiKey = await new Promise((resolve) => {\n      chrome.storage.local.get(['openaiKey'], function(result) {\n        resolve(result.openaiKey);\n      });\n    });\n\n    if (!apiKey) {\n      console.log('[X Filter] No API key found');\n      return false;\n    }\n\n    const prompt = `Analyze if the following content is political in nature. Respond with only \"true\" or \"false\":\n    \"${text}\"`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"gpt-4o-mini\",\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }],\n        temperature: 0.7\n      })\n    });\n\n    const data = await response.json();\n    const result = data.choices[0].message.content.toLowerCase().trim();\n    return result === 'true';\n  } catch (error) {\n    console.error('[X Filter] Error analyzing content:', error);\n    return false;\n  }\n}\n\n/**\n * Searches for video elements within the page.\n * When found inside a post container, the post is hidden.\n */\nfunction hideVideoPosts() {\n  // Look for video elements\n  const videoElements = document.querySelectorAll('video');\n\n  videoElements.forEach(videoElement => {\n    // Assume that the post is housed in an <article> element\n    const postContainer = videoElement.closest('article');\n    if (postContainer) {\n      // Get a unique identifier for the post\n      const postId = getPostId(postContainer);\n      \n      // Skip if already processed\n      if (processedPosts.has(postId)) return;\n      \n      // Mark as processed\n      processedPosts.add(postId);\n      \n      // Hide the post\n      postContainer.style.display = 'none';\n      videoFilteredPosts++; // Increment video filtered count\n      console.log('[X Filter] Hiding post with video');\n      \n      // Update debug panel if visible\n      if (debugPanelVisible) {\n        updateDebugPanel();\n      }\n    }\n  });\n}\n\n// Get a unique identifier for a post\nfunction getPostId(postElement) {\n  // Try to get the post ID from data attributes\n  const idAttribute = postElement.getAttribute('data-testid') || '';\n  const articleId = postElement.getAttribute('aria-labelledby') || '';\n  \n  // If we have an ID attribute, use it\n  if (idAttribute || articleId) {\n    return `${idAttribute}-${articleId}`;\n  }\n  \n  // Fallback to using the post's content as an ID\n  const textContent = postElement.textContent.substring(0, 100);\n  return textContent.replace(/\\s+/g, '');\n}\n\nasync function processPoliticalPosts() {\n  // Find all posts (articles) on the page\n  const posts = document.querySelectorAll('article');\n  \n  // Process each post for political content\n  for (const post of posts) {\n    // Get a unique identifier for the post\n    const postId = getPostId(post);\n    \n    // Skip posts we've already processed\n    if (processedPosts.has(postId)) {\n      continue;\n    }\n    \n    // Get the text content of the post\n    const textContent = post.textContent;\n    \n    // Skip very short posts\n    if (textContent.length < 10) {\n      continue;\n    }\n    \n    // Mark as processed before analysis to prevent duplicate processing\n    processedPosts.add(postId);\n    \n    const isPolitical = await analyzePoliticalContent(textContent);\n    \n    if (isPolitical) {\n      politicalFilteredPosts++; // Increment political filtered count\n      // Hide the post\n      post.style.display = 'none';\n      console.log('[X Filter] Hiding political post');\n      \n      // Update debug panel if visible\n      if (debugPanelVisible) {\n        updateDebugPanel();\n      }\n    }\n  }\n}\n\n/**\n * Process all posts on the page based on active filters\n */\nasync function processAllPosts() {\n  // Prevent concurrent processing\n  if (processingInProgress) return;\n  processingInProgress = true;\n  \n  try {\n    if (isVideoRemovalActive) {\n      hideVideoPosts();\n    }\n    \n    if (isPoliticalFilterActive) {\n      await processPoliticalPosts();\n    }\n    \n    // Update debug panel if visible\n    if (debugPanelVisible) {\n      updateDebugPanel();\n    }\n  } finally {\n    processingInProgress = false;\n  }\n}\n\n/**\n * Starts the content filtering functionality.\n */\nfunction startObserver() {\n  // Initial processing\n  processAllPosts();\n\n  // Set up a MutationObserver to watch for new posts being loaded dynamically.\n  if (!observer) {\n    observer = new MutationObserver((mutations) => {\n      // Throttle processing to reduce performance impact\n      if (!processingInProgress) {\n        setTimeout(() => {\n          processAllPosts();\n        }, 1000);\n      }\n    });\n\n    observer.observe(document.body, { childList: true, subtree: true });\n    console.log('[X Filter] Observer started');\n  }\n}\n\n/**\n * Stops the active filtering functionality.\n */\nfunction stopObserver() {\n  // Stop the MutationObserver if active\n  if (observer) {\n    observer.disconnect();\n    observer = null;\n    console.log('[X Filter] Observer stopped');\n  }\n}\n\n// Add a debug panel to the page\nfunction addDebugPanel() {\n  // Create a toggle button instead of always showing the panel\n  const toggleButton = document.createElement('button');\n  toggleButton.id = 'x-filter-debug-toggle';\n  toggleButton.textContent = 'X Filter';\n  toggleButton.style.position = 'fixed';\n  toggleButton.style.bottom = '10px';\n  toggleButton.style.right = '10px';\n  toggleButton.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n  toggleButton.style.color = 'white';\n  toggleButton.style.padding = '5px 10px';\n  toggleButton.style.borderRadius = '5px';\n  toggleButton.style.zIndex = '9999';\n  toggleButton.style.fontSize = '12px';\n  toggleButton.style.border = 'none';\n  toggleButton.style.cursor = 'pointer';\n  \n  document.body.appendChild(toggleButton);\n  \n  // Create the debug panel (hidden by default)\n  const panel = document.createElement('div');\n  panel.id = 'x-filter-debug-panel';\n  panel.style.position = 'fixed';\n  panel.style.bottom = '45px';\n  panel.style.right = '10px';\n  panel.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n  panel.style.color = 'white';\n  panel.style.padding = '10px';\n  panel.style.borderRadius = '5px';\n  panel.style.zIndex = '9999';\n  panel.style.fontSize = '12px';\n  panel.style.maxWidth = '300px';\n  panel.style.display = 'none';\n  \n  panel.innerHTML = `\n    <h3 style=\"margin: 0 0 5px 0;\">X Filter Debug</h3>\n    <div id=\"x-filter-debug-content\">\n      <p>Video Filter: <span id=\"video-filter-status\">Inactive</span></p>\n      <p>Political Filter: <span id=\"political-filter-status\">Inactive</span></p>\n      <p>Videos Filtered: <span id=\"video-filtered-count\">0</span></p>\n      <p>Political Posts Filtered: <span id=\"political-filtered-count\">0</span></p>\n      <p>Total Posts Filtered: <span id=\"total-filtered-count\">0</span></p>\n    </div>\n  `;\n  \n  document.body.appendChild(panel);\n  \n  // Toggle debug panel when button is clicked\n  toggleButton.addEventListener('click', () => {\n    debugPanelVisible = !debugPanelVisible;\n    panel.style.display = debugPanelVisible ? 'block' : 'none';\n    \n    // Update panel if it's now visible\n    if (debugPanelVisible) {\n      updateDebugPanel();\n    }\n  });\n}\n\n// Update the debug panel with current stats\nfunction updateDebugPanel() {\n  const videoStatus = document.getElementById('video-filter-status');\n  const politicalStatus = document.getElementById('political-filter-status');\n  const videoCount = document.getElementById('video-filtered-count');\n  const politicalCount = document.getElementById('political-filtered-count');\n  const totalCount = document.getElementById('total-filtered-count');\n  \n  if (videoStatus) videoStatus.textContent = isVideoRemovalActive ? 'Active' : 'Inactive';\n  if (politicalStatus) politicalStatus.textContent = isPoliticalFilterActive ? 'Active' : 'Inactive';\n  if (videoCount) videoCount.textContent = videoFilteredPosts;\n  if (politicalCount) politicalCount.textContent = politicalFilteredPosts;\n  if (totalCount) totalCount.textContent = videoFilteredPosts + politicalFilteredPosts;\n}\n\n// Listen for messages from the popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.action === 'getState') {\n    sendResponse({ \n      videoActive: isVideoRemovalActive,\n      politicalActive: isPoliticalFilterActive\n    });\n  } else if (request.action === 'toggleVideoRemoval') {\n    isVideoRemovalActive = !isVideoRemovalActive;\n    console.log(`[X Filter] Video removal ${isVideoRemovalActive ? 'enabled' : 'disabled'}`);\n    \n    // Start or stop the observer based on whether any filter is active\n    if (isVideoRemovalActive || isPoliticalFilterActive) {\n      startObserver();\n    } else {\n      stopObserver();\n    }\n    \n    // Update debug panel if visible\n    if (debugPanelVisible) {\n      updateDebugPanel();\n    }\n    \n    sendResponse({ success: true, active: isVideoRemovalActive });\n  } else if (request.action === 'togglePoliticalFilter') {\n    isPoliticalFilterActive = !isPoliticalFilterActive;\n    console.log(`[X Filter] Political filter ${isPoliticalFilterActive ? 'enabled' : 'disabled'}`);\n    \n    // Start or stop the observer based on whether any filter is active\n    if (isVideoRemovalActive || isPoliticalFilterActive) {\n      startObserver();\n    } else {\n      stopObserver();\n    }\n    \n    // Update debug panel if visible\n    if (debugPanelVisible) {\n      updateDebugPanel();\n    }\n    \n    sendResponse({ success: true, active: isPoliticalFilterActive });\n  }\n  \n  return true; // Indicates async response\n});\n\n// Initial setup when the script loads\nconsole.log('[X Content Filter] Content script loaded');\naddDebugPanel();\n\n// Process posts on initial load with a small delay\nsetTimeout(() => {\n  processAllPosts();\n}, 2000); "],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","r","e","t","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","a","u","call","next","_arrayLikeToArray","toString","slice","name","from","test","_regeneratorRuntime","Object","hasOwnProperty","defineProperty","i","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","isVideoRemovalActive","isPoliticalFilterActive","observer","politicalFilteredPosts","videoFilteredPosts","processedPosts","Set","processingInProgress","debugPanelVisible","analyzePoliticalContent","_x","_analyzePoliticalContent","_callee","text","apiKey","prompt","response","data","result","_callee$","_context","chrome","storage","local","get","openaiKey","console","log","concat","fetch","headers","body","JSON","stringify","model","messages","role","content","temperature","json","choices","message","toLowerCase","trim","t0","error","hideVideoPosts","videoElements","document","querySelectorAll","videoElement","postContainer","closest","postId","getPostId","has","add","style","display","updateDebugPanel","postElement","idAttribute","getAttribute","articleId","textContent","substring","replace","processPoliticalPosts","_processPoliticalPosts","_callee2","posts","_iterator","_step","post","isPolitical","_callee2$","_context2","processAllPosts","_processAllPosts","_callee3","_callee3$","_context3","startObserver","MutationObserver","mutations","setTimeout","observe","childList","subtree","stopObserver","disconnect","addDebugPanel","toggleButton","createElement","id","position","bottom","right","backgroundColor","color","padding","borderRadius","zIndex","fontSize","border","cursor","appendChild","panel","maxWidth","innerHTML","addEventListener","videoStatus","getElementById","politicalStatus","videoCount","politicalCount","totalCount","runtime","onMessage","addListener","request","sender","sendResponse","action","videoActive","politicalActive","success","active"],"sourceRoot":""}